// Nos dejaron una lista con los horarios de partida de algunos aviones. Esta lista se reproduce directamente en las pantallas del aeropuerto y, a modo de travesura, queremos adelantar una hora cada partida. 
// Nuestro trabajo será utilizar el método map para poder lograrlo y almacenar la lista en una variable nueva llamada horariosAtrasados.
// Además de hacer esto, deberemos realizar las siguientes operaciones:
// 	Añadir un nuevo horario al principio de la lista: Usamos unshift para agregar el horario 10 al principio.
// 	Eliminar el último horario de la lista: Usamos pop para eliminar el último horario y lo guardamos en ultimoHorario.
// 	Verificar si el horario 14 está en la lista y agregarlo al final si no está presente: Usamos includes para verificar si 14 está en la lista y push para agregarlo si no está.
// 	Encontrar la posición del horario 18 y eliminarlo si está presente: Usamos indexOf para encontrar la posición de 18 y splice para eliminarlo si está presente.
// 	Añadir el horario eliminado en el paso 2 al final de la nueva lista de horarios atrasados: Usamos push para agregar el ultimoHorario (adelantado una hora) al final de horariosAtrasados.
// 	Mostrar la lista final de horarios atrasados: Mostramos la lista por consola.
// 	Eliminar el primer elemento de la lista de horarios atrasados: Usamos shift para eliminar el primer elemento.
// 	Verificar si el horario 9 está en la lista y agregarlo al principio si no está presente: Usamos includes para verificar si 9 está en la lista y unshift para agregarlo si no está.
// 	Por último, mostrar la lista final después de todas las operaciones

let horariosPartida =[12,14,18,21];
let horariosAtrasados = horariosPartida.map(function(horas){
    return horas +1;
})
console.log(horariosAtrasados);

horariosAtrasados.unshift(10);
console.log("punto 1" , horariosAtrasados);

let ultimoHorario = horariosAtrasados.pop();
//console.log(ultimoHorario);
console.log("punto 2 ", horariosAtrasados);

if(horariosAtrasados.includes(14)){
    console.log("El 14 está atrasado")
} else {
    horariosAtrasados.push(14);
    console.log("punto 3", horariosAtrasados);
}

if(horariosAtrasados.indexOf(18) != 1){
    let posicion = horariosAtrasados.indexOf(18);
    horariosAtrasados.splice(posicion, 1);
    console.log("punto 4" , horariosAtrasados);
}

horariosAtrasados.push(ultimoHorario);
console.log("punto 5 ", horariosAtrasados);
console.log("punto 6 ", horariosAtrasados);

horariosAtrasados.shift();
console.log("punto 7", horariosAtrasados);

if(horariosAtrasados.includes(9)== false){
    horariosAtrasados.unshift(9);
} 

console.log("punto 8 ", horariosAtrasados);

console.log("punto 9" , horariosAtrasados);


